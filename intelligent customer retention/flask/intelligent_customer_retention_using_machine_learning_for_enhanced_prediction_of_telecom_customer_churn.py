# -*- coding: utf-8 -*-
"""intelligent customer retention:using machine learning for enhanced prediction  of telecom customer churn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I3Y8_O5V-b8PUXM5Mxrgexd9WhLriiKq
"""

# importing reguired lip
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

# checking for available styles
plt.style.available

# Applying styles to notebook
plt.style.use('fivethirtyeight')

#reading csv data
df = pd.read_csv('/content/Churn_Modelling.csv')
df.head()


# checking data type
df.info()

"""
Types of Analysis
1) Univariate analysis
2)Bivariate analysis
3)Multivariate analysis
4)Descriptive analysis / statistics
"""


# Univariate analysis - Extacting info from a single column
# checking data distribution
plt.figure(figsize=(12,5))
plt.subplot(121)
sns.distplot(df['Age'])
plt.subplot(122)
sns.distplot(df['CreditScore'],color='r')

# Creating dummy dataframe for categorical values
df_cat = df.select_dtypes(include='int64')
df_cat.head(10)

for i,j in enumerate(df_cat):
  print(j)
  print(1)
# Visualing counts in each variable 
plt.figure(figsize=(18,7))
for i,j in enumerate(df_cat):
  plt.subplot(1,9,i+1)
  sns.countplot(df[j],color='r')

# Bivarite analysis - Extracting info from double column
# Visualizing the relation between RowNumber,CustomerId,CreditScore,Age,Tenure,NumOfProducts,HasCrCard,IsActiveMember & Exited
plt.figure(figsize=(12,5))
plt.subplot(131)
sns.countplot(df['CreditScore'],x=df['Age'])
plt.countplot(132)
sns.countplot(df['CreditScore'],x=df['Geography'])
plt.countplot(133)
sns.countplot(df['CreditScore'],x=df['Gender'])
plt.countplot(134)
sns.countplot(df['CreditScore'],x=df['Tenure'])
plt.countplot(135)
sns.countplot(df['CreditScore'],x=df['Balance'])
plt.countplot(136)
sns.countplot(df['CreditScore'],x=df['NumOfProducts'])
plt.countplot(137)
sns.countplot(df['CreditScore'],x=df['HasCrCard'])
plt.countplot(138)
sns.countplot(df['CreditScore'],x=df['IsActiveMember'])
plt.countplot(139)
sns.countplot(df['CreditScore'],x=df['EstimatedSalary'])
plt.countplot(139)
sns.countplot(df['CreditScore'],x=df['Exited'])

# Creating new column
df['Age_'] = ['15-30' if x<=30 else "30-50" if x>30 and x<=50 else '50+' for x in df['Age']]

df.head()

# Finding relaction between Age_& CreditScore
pd.crosstab(df['Age'],df['CreditScore'])

#removing Age_ column

df.drop('Age_', axis=1, inplace=True)
df.head()

#Multivariate analysis - Extract info from more than 2 columns
sns.swarmplot(df['CreditScore'])

22# Finding corr
sns.heatmap(df.corr())

# Descriptive analysis - descriptive stat
df.describe(include='all')

#Data preprocessing

# Finding the shape of data
df.shape

# Finding null values
df.isnull().sum()

# Finding dtype
df.info()

# Finding outliers
sns.boxplot(df['CreditScore'])

# Finding the count of outliers
#IQR = q3-q1......., ub = q3+(1.5*IGR), 1b = q1-(1.5*IQR)

q1 = np.quantile(df['CreditScore'],0.25)
q3 = np.quantile(df['CreditScore'],0.75)

print('Q1 = {}'.format(q1))
print('Q3 = {}'.format(q3))

IQR = q3-q1

print('IQR value is {}'.format(IQR))

upperBound = q3+(1.5*IQR)
lowerBound = q1-(1.5*IQR)

print('The upper bount value is {} & the lower bount value is {}'.format(upperBound,lowerBound))

print('Skwed data :',len(df[df['CreditScore']>upperBound]))

# Handling outliers
from scipy import stats
plt.figure(figsize=(15,4))
plt.subplot(131)
sns.distplot(df['CreditScore'])
plt.subplot(132)
stats.probplot(np.log(df['CreditScore']),plot=plt)
plt.subplot(133)
sns.distplot(np.log(df['CreditScore']))

# Transforming normal values to log values
df['CreditScore']=np.log(df['CreditScore'])

df.head()

# Encoding
df['Geography'] = [0 if x=='LOW' else 1 if x=='NORMAL' else 2 for x in df['Geography']]

df.head()

# Spliting dep &  Indep variables
x = df.drop('Gender',axis=1)
x.head()

y = df['Tenure']
y